jobs:
  - name: dataworks-aws-collections-rehydration-dev
    max_in_flight: 1
    plan:
      - in_parallel:
          - put: meta
            resource: meta-development
          - get: dataworks-aws-collections-rehydration
          - get: dataworks-aws-collections-rehydration-develop
            trigger: true
          - get: emr-relauncher-release
            version: { tag: ((emr-relauncher-version.development)) }
            trigger: true
          - get: dataworks-behavioural-framework
            trigger: false
          - get: al2-emr-ami
            trigger: true
      - .: ((inject meta.plan.get-artefacts))
        config:
          params:
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.management)):role/ci
        input_mapping:
          dataworks-aws-collections-rehydration: dataworks-aws-collections-rehydration-develop
      - .: (( inject meta.plan.terraform-bootstrap ))
        config:
          params:
            AWS_ACC: ((aws_account.development))
        input_mapping:
          dataworks-aws-collections-rehydration: dataworks-aws-collections-rehydration-develop
      - .: (( inject meta.plan.terraform-apply ))
        params:
          TF_WORKSPACE: default
        input_mapping:
          dataworks-aws-collections-rehydration: dataworks-aws-collections-rehydration-develop
      - .: (( inject meta.plan.terraform-plan ))
        params:
          TF_WORKSPACE: default
        input_mapping:
          dataworks-aws-collections-rehydration: dataworks-aws-collections-rehydration-develop
      - .: (( inject meta.plan.e2e-tests))
        config:
          params:
            TF_WORKSPACE: default
            AWS_ACC: ((aws_account.development))
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.development)):role/ci
        input_mapping:
          dataworks-aws-collections-rehydration: dataworks-aws-collections-rehydration-develop