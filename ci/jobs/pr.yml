jobs:
  - name: dataworks-aws-collections-rehydration-pr
    plan:
      - in_parallel:
        - get: dataworks-aws-collections-rehydration-pr
          trigger: true
          version: every
        - get: al2-emr-ami
          trigger: true
      - .: ((inject meta.plan.get-artefacts))
        config:
          params:
            launcher_version: ((emr_launcher_version.qa)) 
            emr_relauncher_ver: ((emr-relauncher-version.qa))
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.management)):role/ci
      - put: dataworks-aws-collections-rehydration-pr
        params:
          path: dataworks-aws-collections-rehydration-pr
          status: pending
      - task: linting-shell
        input_mapping:
          dataworks-aws-collections-rehydration: dataworks-aws-collections-rehydration-pr
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: koalaman/shellcheck-alpine
              tag: latest
          run:
            path: sh
            args:
              - -exc
              - |
                find . -name "*.sh" ! -name "get_lambda_release.sh" ! -name "cloudwatch.sh" | cat >> shell-list

                # Ignore SC2154 as it will fail all terraform vars that are passed to scripts
                # Ignore SC1091 due to sourcing of files that aren't in the same path locally so shellcheck will fail, but these files are on the boxes
                for i in $(cat shell-list); do shellcheck -e SC2317 -e SC2154 -e SC1091 $i; done
            dir: dataworks-aws-collections-rehydration
          inputs:
            - name: dataworks-aws-collections-rehydration
      - .: (( inject meta.plan.terraform-bootstrap ))
        input_mapping:
          dataworks-aws-collections-rehydration: dataworks-aws-collections-rehydration-pr
      - task: terraform-plan
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: ((dataworks.terraform_repository))
              tag: ((dataworks.terraform_version))
          params:
            TF_INPUT: false
            TF_CLI_ARGS_apply: -lock-timeout=300s
            TF_CLI_ARGS_plan: -lock-timeout=300s
            TF_WORKSPACE: qa
            launcher_version: ((emr_launcher_version.qa))
            emr_relauncher_ver: ((emr-relauncher-version.qa))
          run:
            path: sh
            dir: dataworks-aws-collections-rehydration
            args:
              - -exc
              - |
                export TF_VAR_emr_ami_id=$(cat ../al2-emr-ami/id)
                terraform fmt -recursive -check=true
                cp ../terraform-config/terraform.tf .
                cp ../terraform-config/terraform.tfvars .
                export TF_VAR_emr_ami_id=$(cat ../al2-emr-ami/id)
                export TF_VAR_emr_launcher_zip="{base_path = \"../artefacts\", version = \"${launcher_version}\"}"
                export TF_VAR_dataworks_emr_relauncher_zip="{base_path = \"../artefacts\", version = \"${emr_relauncher_ver}\"}"
                terraform init
                terraform workspace show
                terraform plan
          inputs:
            - name: dataworks-aws-collections-rehydration
            - name: terraform-config
            - name: al2-emr-ami
            - name: artefacts
        input_mapping:
          dataworks-aws-collections-rehydration: dataworks-aws-collections-rehydration-pr
        on_failure:
          put: dataworks-aws-collections-rehydration-pr
          params:
            path: dataworks-aws-collections-rehydration-pr
            status: failure
        on_success:
          put: dataworks-aws-collections-rehydration-pr
          params:
            path: dataworks-aws-collections-rehydration-pr
            status: success